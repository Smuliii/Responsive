// -------------------------------------------------------------------------- //
//	Creates float classes for each breakpoint.
// -------------------------------------------------------------------------- //
@mixin push($bp, $direction) {
	// XXS doesn't have a min value.
	@if $bp == xxs {
		.push-#{$bp} { float: $direction; }

		@media #{bp-max($bp)} {
			.push-#{$bp}-only { float: $direction; }
		}
	} @else {
		@media #{bp-min($bp)} {
			.push-#{$bp} { float: $direction; }

			// Large doesn't need an "only" since it operates on min width.
			@if $bp != l {
				@media #{bp-max($bp)} {
					.push-#{$bp}-only { float: $direction; }
				}
			}
		}
	}
}

@mixin pull($bp, $direction) {
	// XS doesn't have a min value.
	@if $bp == xs {
		.pull-#{$bp} { float: $direction; }

		@media #{bp-max($bp)} {
			.pull-#{$bp}-only { float: $direction; }
		}
	} @else {
		@media #{bp-min($bp)} {
			.pull-#{$bp} { float: $direction; }

			// Large doesn't need an "only" since it operates on min width.
			@if $bp != l {
				@media #{bp-max($bp)} {
					.pull-#{$bp}-only { float: $direction; }
				}
			}
		}
	}
}
