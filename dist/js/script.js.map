{"version":3,"names":[],"mappings":"","sources":["script.js"],"sourcesContent":["// If JavaScript is enabled, remove a class `no-js` and replace with a class `js`\r\njQuery('html').toggleClass('no-js js');\r\n\r\n// Run the code after the DOM has been fully loaded\r\njQuery(document).ready(function( $ ) {\r\n\r\n\t/* ---------------------------------------------------------------------- */\r\n\t/*\tVariables & Functions\r\n\t/* ---------------------------------------------------------------------- */\r\n\r\n\tvar $window      = $(window),\r\n\t\t$html        = $('html'),\r\n\t\t$body        = $('body'),\r\n\t\tlang         = $html.attr('lang'),\r\n\t\tbaseFontSize = parseFloat( $html.css('font-size') );\r\n\r\n\t/**\r\n\t * Update `isMobileView` variable and trigger `mobileViewChange` event when a screen size change occurs\r\n\t */\r\n\tvar mobileBreakpoint = '(max-width: 47.99em)',\r\n\t\tisMobileView     = window.matchMedia( mobileBreakpoint ).matches,\r\n\t\tresizeTimer;\r\n\r\n\t$window.on('resize', function()  {\r\n\t\tclearTimeout(resizeTimer);\r\n\r\n\t\tresizeTimer = setTimeout(function() {\r\n\t\t\tif( isMobileView !== window.matchMedia( mobileBreakpoint ).matches ) {\r\n\t\t\t\tisMobileView = window.matchMedia( mobileBreakpoint ).matches;\r\n\t\t\t\t$body.trigger('mobileViewChange', isMobileView);\r\n\t\t\t}\r\n\t\t}, 250);\r\n\t}).trigger('resize');\r\n\r\n\t/**\r\n\t * Convert pixels to ems\r\n\t *\r\n\t * @param {Number|String} value\r\n\t * @param {Boolean} [withUnit]\r\n\t * @return {Number|String}\r\n\t */\r\n\tfunction convertPxToEm( value, withUnit ) {\r\n\r\n\t\tif( typeof value !== 'undefined' && value )\r\n\t\t\treturn parseFloat( value ) / baseFontSize + (typeof withUnit === 'undefined' || withUnit ? 'em' : null);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert ems to pixels\r\n\t *\r\n\t * @param {Number|String} value\r\n\t * @param {Boolean} [withUnit]\r\n\t * @return {Number|String}\r\n\t */\r\n\tfunction convertEmToPx( value, withUnit ) {\r\n\r\n\t\tif( typeof value !== 'undefined' && value )\r\n\t\t\treturn parseFloat( value ) * baseFontSize + (typeof withUnit === 'undefined' || withUnit ? 'px' : null);\r\n\r\n\t}\r\n\r\n\t/* ---------------------------------------------------------------------- */\r\n\t/*  Custom Functions\r\n\t/* ---------------------------------------------------------------------- */\r\n\r\n});"],"file":"script.js","sourceRoot":"/source/"}