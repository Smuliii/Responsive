{"version":3,"names":[],"mappings":"","sources":["plugins.js"],"sourcesContent":["/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license */\r\nwindow.matchMedia || (window.matchMedia = function() {\r\n\t\"use strict\";\r\n\r\n\t// For browsers that support matchMedium api such as IE 9 and webkit\r\n\tvar styleMedia = (window.styleMedia || window.media);\r\n\r\n\t// For those that don't support matchMedium\r\n\tif (!styleMedia) {\r\n\t\tvar style       = document.createElement('style'),\r\n\t\t\tscript      = document.getElementsByTagName('script')[0],\r\n\t\t\tinfo        = null;\r\n\r\n\t\tstyle.type  = 'text/css';\r\n\t\tstyle.id    = 'matchmediajs-test';\r\n\r\n\t\tscript.parentNode.insertBefore(style, script);\r\n\r\n\t\t// 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\r\n\t\tinfo = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\r\n\r\n\t\tstyleMedia = {\r\n\t\t\tmatchMedium: function(media) {\r\n\t\t\t\tvar text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\r\n\r\n\t\t\t\t// 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\r\n\t\t\t\tif (style.styleSheet) {\r\n\t\t\t\t\tstyle.styleSheet.cssText = text;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyle.textContent = text;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Test if media query is true or false\r\n\t\t\t\treturn info.width === '1px';\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\treturn function(media) {\r\n\t\treturn {\r\n\t\t\tmatches: styleMedia.matchMedium(media || 'all'),\r\n\t\t\tmedia: media || 'all'\r\n\t\t};\r\n\t};\r\n}());\n\n/*! matchMedia() polyfill addListener/removeListener extension. Author & copyright (c) 2012: Scott Jehl. Dual MIT/BSD license */\n(function(){\n\t// Bail out for browsers that have addListener support\n\tif (window.matchMedia && window.matchMedia('all').addListener) {\n\t\treturn false;\n\t}\n\n\tvar localMatchMedia = window.matchMedia,\n\t\thasMediaQueries = localMatchMedia('only all').matches,\n\t\tisListening     = false,\n\t\ttimeoutID       = 0,    // setTimeout for debouncing 'handleChange'\n\t\tqueries         = [],   // Contains each 'mql' and associated 'listeners' if 'addListener' is used\n\t\thandleChange    = function(evt) {\n\t\t\t// Debounce\n\t\t\tclearTimeout(timeoutID);\n\n\t\t\ttimeoutID = setTimeout(function() {\n\t\t\t\tfor (var i = 0, il = queries.length; i < il; i++) {\n\t\t\t\t\tvar mql         = queries[i].mql,\n\t\t\t\t\t\tlisteners   = queries[i].listeners || [],\n\t\t\t\t\t\tmatches     = localMatchMedia(mql.media).matches;\n\n\t\t\t\t\t// Update mql.matches value and call listeners\n\t\t\t\t\t// Fire listeners only if transitioning to or from matched state\n\t\t\t\t\tif (matches !== mql.matches) {\n\t\t\t\t\t\tmql.matches = matches;\n\n\t\t\t\t\t\tfor (var j = 0, jl = listeners.length; j < jl; j++) {\n\t\t\t\t\t\t\tlisteners[j].call(window, mql);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 30);\n\t\t};\n\n\twindow.matchMedia = function(media) {\n\t\tvar mql         = localMatchMedia(media),\n\t\t\tlisteners   = [],\n\t\t\tindex       = 0;\n\n\t\tmql.addListener = function(listener) {\n\t\t\t// Changes would not occur to css media type so return now (Affects IE <= 8)\n\t\t\tif (!hasMediaQueries) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set up 'resize' listener for browsers that support CSS3 media queries (Not for IE <= 8)\n\t\t\t// There should only ever be 1 resize listener running for performance\n\t\t\tif (!isListening) {\n\t\t\t\tisListening = true;\n\t\t\t\twindow.addEventListener('resize', handleChange, true);\n\t\t\t}\n\n\t\t\t// Push object only if it has not been pushed already\n\t\t\tif (index === 0) {\n\t\t\t\tindex = queries.push({\n\t\t\t\t\tmql         : mql,\n\t\t\t\t\tlisteners   : listeners\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlisteners.push(listener);\n\t\t};\n\n\t\tmql.removeListener = function(listener) {\n\t\t\tfor (var i = 0, il = listeners.length; i < il; i++){\n\t\t\t\tif (listeners[i] === listener){\n\t\t\t\t\tlisteners.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn mql;\n\t};\n}());\n\n\n"],"file":"plugins.js","sourceRoot":"/source/"}